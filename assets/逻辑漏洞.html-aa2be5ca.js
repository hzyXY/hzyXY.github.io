const e=JSON.parse('{"key":"v-16f02d3a","path":"/WebSec/WebVul/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E.html","title":"逻辑漏洞","lang":"zh-CN","frontmatter":{"title":"逻辑漏洞","date":"2022-11-09T00:00:00.000Z","category":["Web安全"],"tag":["Web常规漏洞"],"description":"逻辑漏洞 逻辑漏洞就是基于开发人员设计程序的时候，逻辑不严密，导致攻击者可以修改、绕过或者中断整个程序，让程序按照开发人员的预料之外去执行。简单来说，只要你能修改、绕过、中断整个开发者运行软件的整体逻辑，这个便是逻辑漏洞。 逻辑漏洞的分类 软件设计之初便存在的漏洞 关键在于开发设计者，如永恒之蓝、sql注入、文件上传等，都是设计的时候未按照安全设计的方法进行设计所产生的，攻击者只需找到特定的点，执行特定的代码即可产生研发预料之外的现象。 使用者未能安全使用软件所产生","head":[["meta",{"property":"og:url","content":"https://hzyxy.github.io/WebSec/WebVul/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E.html"}],["meta",{"property":"og:site_name","content":"XY"}],["meta",{"property":"og:title","content":"逻辑漏洞"}],["meta",{"property":"og:description","content":"逻辑漏洞 逻辑漏洞就是基于开发人员设计程序的时候，逻辑不严密，导致攻击者可以修改、绕过或者中断整个程序，让程序按照开发人员的预料之外去执行。简单来说，只要你能修改、绕过、中断整个开发者运行软件的整体逻辑，这个便是逻辑漏洞。 逻辑漏洞的分类 软件设计之初便存在的漏洞 关键在于开发设计者，如永恒之蓝、sql注入、文件上传等，都是设计的时候未按照安全设计的方法进行设计所产生的，攻击者只需找到特定的点，执行特定的代码即可产生研发预料之外的现象。 使用者未能安全使用软件所产生"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XY"}],["meta",{"property":"article:tag","content":"Web常规漏洞"}],["meta",{"property":"article:published_time","content":"2022-11-09T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"逻辑漏洞\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XY\\",\\"url\\":\\"https://hzyxy.github.io\\"}]}"]]},"headers":[{"level":2,"title":"逻辑漏洞","slug":"逻辑漏洞","link":"#逻辑漏洞","children":[{"level":3,"title":"逻辑漏洞的分类","slug":"逻辑漏洞的分类","link":"#逻辑漏洞的分类","children":[]},{"level":3,"title":"身份验证漏洞","slug":"身份验证漏洞","link":"#身份验证漏洞","children":[]},{"level":3,"title":"暴力破解","slug":"暴力破解","link":"#暴力破解","children":[]},{"level":3,"title":"登录验证码","slug":"登录验证码","link":"#登录验证码","children":[]},{"level":3,"title":"登录前端验证漏洞","slug":"登录前端验证漏洞","link":"#登录前端验证漏洞","children":[]},{"level":3,"title":"任意账号密码","slug":"任意账号密码","link":"#任意账号密码","children":[]},{"level":3,"title":"权限类漏洞","slug":"权限类漏洞","link":"#权限类漏洞","children":[]},{"level":3,"title":"其他漏洞","slug":"其他漏洞","link":"#其他漏洞","children":[]},{"level":3,"title":"SRC中逻辑漏洞检查总结","slug":"src中逻辑漏洞检查总结","link":"#src中逻辑漏洞检查总结","children":[]}]}],"git":{},"readingTime":{"minutes":21.62,"words":6487},"filePathRelative":"WebSec/WebVul/逻辑漏洞.md","localizedDate":"2022年11月9日","excerpt":"<h2> 逻辑漏洞</h2>\\n<ul>\\n<li>逻辑漏洞就是基于开发人员设计程序的时候，逻辑不严密，导致攻击者可以修改、绕过或者中断整个程序，让程序按照开发人员的预料之外去执行。简单来说，只要你能修改、绕过、中断整个开发者运行软件的整体逻辑，这个便是逻辑漏洞。</li>\\n</ul>\\n<h3> 逻辑漏洞的分类</h3>\\n<h4> 软件设计之初便存在的漏洞</h4>\\n<ul>\\n<li>关键在于开发设计者，如永恒之蓝、sql注入、文件上传等，都是设计的时候未按照安全设计的方法进行设计所产生的，攻击者只需找到特定的点，执行特定的代码即可产生研发预料之外的现象。</li>\\n</ul>\\n<h4> 使用者未能安全使用软件所产生</h4>","autoDesc":true}');export{e as data};
