const t=JSON.parse('{"key":"v-0e05fc5e","path":"/IntranetSec/Tools/%E5%86%85%E7%BD%91%E4%BB%A3%E7%90%86.html","title":"内网代理","lang":"zh-CN","frontmatter":{"title":"内网代理","date":"2022-11-29T00:00:00.000Z","category":["内网安全"],"tag":["代理"],"description":"内网代理 LCX端口转发 windwos为lcx、linux为portmap。 LCX有端口映射和端口转发的功能。 例如当目标的3389端口只对内开放而不对外开放时，可以使用端口映射将3389端口映射到目标的其他端口使 用；当目标处于内网或目标配置的策略只允许访问固定某一端口时，可以通过端口转发突破限制。 Windows版： 端口转发： Lcx -listen &lt;监听slave请求的端口&gt;&lt;等待连接的端口&gt; Lcx -slave &lt;攻击机IP&gt;&lt;监听端口&gt;&lt;目标IP&gt;&lt;目标端口&gt; 端口映射： Lcx -tran&lt;等待连接的端口&gt;&lt;目标IP&gt;&lt;日标端口&gt; Linux版 Usage:./portmap -m method [-h1 host1] -p1 port1 [-h2 host2] -p2 port2 [-v] [-log filename] -v: version -h1: host1 -h2: host2 -p1: port1 -p2: port2 -log: log the data -m: the action method for this tool 1: listen on PORT1 and connect to HOST2:PORT2 2: listen on PORT1 and PORT2 3: connect to HOST1:PORT1 and HOST2:PORT2","head":[["meta",{"property":"og:url","content":"https://hzyxy.github.io/IntranetSec/Tools/%E5%86%85%E7%BD%91%E4%BB%A3%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"XY"}],["meta",{"property":"og:title","content":"内网代理"}],["meta",{"property":"og:description","content":"内网代理 LCX端口转发 windwos为lcx、linux为portmap。 LCX有端口映射和端口转发的功能。 例如当目标的3389端口只对内开放而不对外开放时，可以使用端口映射将3389端口映射到目标的其他端口使 用；当目标处于内网或目标配置的策略只允许访问固定某一端口时，可以通过端口转发突破限制。 Windows版： 端口转发： Lcx -listen &lt;监听slave请求的端口&gt;&lt;等待连接的端口&gt; Lcx -slave &lt;攻击机IP&gt;&lt;监听端口&gt;&lt;目标IP&gt;&lt;目标端口&gt; 端口映射： Lcx -tran&lt;等待连接的端口&gt;&lt;目标IP&gt;&lt;日标端口&gt; Linux版 Usage:./portmap -m method [-h1 host1] -p1 port1 [-h2 host2] -p2 port2 [-v] [-log filename] -v: version -h1: host1 -h2: host2 -p1: port1 -p2: port2 -log: log the data -m: the action method for this tool 1: listen on PORT1 and connect to HOST2:PORT2 2: listen on PORT1 and PORT2 3: connect to HOST1:PORT1 and HOST2:PORT2"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"XY"}],["meta",{"property":"article:tag","content":"代理"}],["meta",{"property":"article:published_time","content":"2022-11-29T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内网代理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XY\\",\\"url\\":\\"https://hzyxy.github.io\\"}]}"]]},"headers":[{"level":2,"title":"内网代理","slug":"内网代理","link":"#内网代理","children":[{"level":3,"title":"LCX端口转发","slug":"lcx端口转发","link":"#lcx端口转发","children":[]},{"level":3,"title":"Netcat反弹shell","slug":"netcat反弹shell","link":"#netcat反弹shell","children":[]},{"level":3,"title":"Powercat反弹shell","slug":"powercat反弹shell","link":"#powercat反弹shell","children":[]},{"level":3,"title":"Bash反弹shell","slug":"bash反弹shell","link":"#bash反弹shell","children":[]},{"level":3,"title":"Python反弹shell","slug":"python反弹shell","link":"#python反弹shell","children":[]},{"level":3,"title":"EarthWorm代理","slug":"earthworm代理","link":"#earthworm代理","children":[]},{"level":3,"title":"通过MSF代理实现三层网络穿透","slug":"通过msf代理实现三层网络穿透","link":"#通过msf代理实现三层网络穿透","children":[]},{"level":3,"title":"通过frp代理实现三层网络穿透","slug":"通过frp代理实现三层网络穿透","link":"#通过frp代理实现三层网络穿透","children":[]}]}],"git":{},"readingTime":{"minutes":10.58,"words":3174},"filePathRelative":"IntranetSec/Tools/内网代理.md","localizedDate":"2022年11月29日","excerpt":"<h2> 内网代理</h2>\\n<h3> LCX端口转发</h3>\\n<ul>\\n<li>windwos为lcx、linux为portmap。</li>\\n<li>LCX有端口映射和端口转发的功能。</li>\\n<li>例如当目标的3389端口只对内开放而不对外开放时，可以使用端口映射将3389端口映射到目标的其他端口使 用；当目标处于内网或目标配置的策略只允许访问固定某一端口时，可以通过端口转发突破限制。</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>Windows版：\\n端口转发：\\nLcx <span class=\\"token parameter variable\\">-listen</span> <span class=\\"token operator\\">&lt;</span>监听slave请求的端口<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span>等待连接的端口<span class=\\"token operator\\">&gt;</span>\\nLcx <span class=\\"token parameter variable\\">-slave</span> <span class=\\"token operator\\">&lt;</span>攻击机IP<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span>监听端口<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span>目标IP<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span>目标端口<span class=\\"token operator\\">&gt;</span>\\n端口映射：\\nLcx -tran<span class=\\"token operator\\">&lt;</span>等待连接的端口<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span>目标IP<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&lt;</span>日标端口<span class=\\"token operator\\">&gt;</span>\\n\\nLinux版\\nUsage:./portmap <span class=\\"token parameter variable\\">-m</span> method <span class=\\"token punctuation\\">[</span>-h1 host1<span class=\\"token punctuation\\">]</span> <span class=\\"token parameter variable\\">-p1</span> port1 <span class=\\"token punctuation\\">[</span>-h2 host2<span class=\\"token punctuation\\">]</span> <span class=\\"token parameter variable\\">-p2</span> port2 <span class=\\"token punctuation\\">[</span>-v<span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">[</span>-log filename<span class=\\"token punctuation\\">]</span>\\n-v: version\\n-h1: host1\\n-h2: host2\\n-p1: port1\\n-p2: port2\\n-log: log the data\\n-m: the action method <span class=\\"token keyword\\">for</span> this tool\\n<span class=\\"token number\\">1</span>: listen on PORT1 and connect to HOST2:PORT2\\n<span class=\\"token number\\">2</span>: listen on PORT1 and PORT2\\n<span class=\\"token number\\">3</span>: connect to HOST1:PORT1 and HOST2:PORT2\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
